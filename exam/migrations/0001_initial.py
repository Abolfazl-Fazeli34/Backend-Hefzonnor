# Generated by Django 5.2.3 on 2025-10-24 11:42

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('quran', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='QuizLeaderboard',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('quiz_id', models.BigIntegerField()),
                ('user_id', models.BigIntegerField()),
                ('correct_answers', models.IntegerField()),
                ('wrong_answers', models.IntegerField()),
                ('total_score', models.IntegerField()),
                ('started_at', models.DateTimeField()),
                ('submitted_at', models.DateTimeField()),
                ('time_spent', models.DurationField()),
                ('rank', models.IntegerField()),
            ],
            options={
                'db_table': 'quiz_leaderboard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('difficulty', models.IntegerField(default=0)),
                ('question_from', models.CharField(blank=True, max_length=100, null=True)),
                ('answer_from', models.CharField(blank=True, max_length=100, null=True)),
                ('code', models.PositiveSmallIntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuizSubtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('multiple_choice', 'چهار گزینه\u200cای'), ('ordering', 'چینشی'), ('matching', 'وصل کردنی'), ('typing', 'تایپی')], max_length=20)),
                ('title', models.CharField(max_length=100)),
                ('code', models.PositiveSmallIntegerField(unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='BaseParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct_answers', models.PositiveSmallIntegerField(default=0)),
                ('wrong_answers', models.PositiveSmallIntegerField(default=0)),
                ('started_at', models.DateTimeField(null=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('total_score', models.IntegerField(default=0)),
                ('excluded_from_leaderboard', models.BooleanField(default=False)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('incomplete', 'ناتمام'), ('completed', 'کامل شده')], default='incomplete', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quiz_participations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MatchingParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_steps', models.PositiveIntegerField()),
                ('current_step', models.PositiveIntegerField(default=1)),
                ('wrong_attempts', models.PositiveIntegerField(default=0)),
                ('participation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='matching_participation', to='exam.baseparticipation')),
            ],
        ),
        migrations.CreateModel(
            name='MultipleChoiceParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('not_answered', models.PositiveSmallIntegerField(default=0)),
                ('participation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='multiple_choice_participation', to='exam.baseparticipation')),
            ],
        ),
        migrations.CreateModel(
            name='MultipleChoiceQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('participation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='exam.multiplechoiceparticipation')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='exam.questiontemplate')),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('text', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='exam.multiplechoicequestion')),
            ],
        ),
        migrations.CreateModel(
            name='MultipleChoiceAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('participation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='exam.multiplechoiceparticipation')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.multiplechoicequestion')),
                ('selected_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='exam.option')),
            ],
        ),
        migrations.CreateModel(
            name='OrderingParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_steps', models.PositiveIntegerField()),
                ('current_step', models.PositiveIntegerField(default=1)),
                ('wrong_attempts', models.PositiveIntegerField(default=0)),
                ('participation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ordering_participation', to='exam.baseparticipation')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(choices=[('multiple_choice', 'چهار گزینه\u200cای'), ('ordering', 'چینشی'), ('matching', 'وصل کردنی'), ('typing', 'تایپی')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False)),
                ('quiz_start_datetime', models.DateTimeField()),
                ('quiz_end_datetime', models.DateTimeField()),
                ('quiz_duration', models.PositiveIntegerField()),
                ('is_public', models.BooleanField(default=False)),
                ('auto_generate', models.BooleanField(default=True)),
                ('question_count', models.PositiveIntegerField(blank=True, null=True)),
                ('allow_multiple_attempts', models.BooleanField(default=False)),
                ('min_age', models.PositiveIntegerField(blank=True, null=True)),
                ('max_age', models.PositiveIntegerField(blank=True, null=True)),
                ('province', models.CharField(blank=True, choices=[('east_azerbaijan', 'آذربایجان شرقی'), ('west_azerbaijan', 'آذربایجان غربی'), ('ardabil', 'اردبیل'), ('isfahan', 'اصفهان'), ('alborz', 'البرز'), ('ilaam', 'ایلام'), ('bushehr', 'بوشهر'), ('tehran', 'تهران'), ('chahar_mahaal', 'چهارمحال و بختیاری'), ('south_khorasan', 'خراسان جنوبی'), ('razavi_khorasan', 'خراسان رضوی'), ('north_khorasan', 'خراسان شمالی'), ('khuzestan', 'خوزستان'), ('zanjan', 'زنجان'), ('semnan', 'سمنان'), ('sistan_baluchestan', 'سیستان و بلوچستان'), ('fars', 'فارس'), ('qazvin', 'قزوین'), ('qom', 'قم'), ('kurdistan', 'کردستان'), ('kerman', 'کرمان'), ('kermanshah', 'کرمانشاه'), ('kohgiluyeh', 'کهگیلویه و بویراحمد'), ('golestan', 'گلستان'), ('gilan', 'گیلان'), ('lorestan', 'لرستان'), ('mazandaran', 'مازندران'), ('markazi', 'مرکزی'), ('hormozgan', 'هرمزگان'), ('hamedan', 'همدان'), ('yazd', 'یزد')], max_length=100, null=True)),
                ('is_scoring_enabled', models.BooleanField(default=False)),
                ('correct_answer_score', models.PositiveIntegerField(blank=True, null=True)),
                ('negative_score', models.PositiveIntegerField(blank=True, null=True)),
                ('participation_score', models.PositiveIntegerField(blank=True, null=True)),
                ('top_three_bonus', models.PositiveIntegerField(blank=True, null=True)),
                ('top_ten_bonus', models.PositiveIntegerField(blank=True, null=True)),
                ('chunk_size', models.PositiveIntegerField(default=7)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quizzes', to=settings.AUTH_USER_MODEL)),
                ('end_verse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quiz_ended', to='quran.verse')),
                ('participants', models.ManyToManyField(related_name='quizzes_joined', through='exam.BaseParticipation', to=settings.AUTH_USER_MODEL)),
                ('start_verse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quiz_started', to='quran.verse')),
                ('subtypes', models.ManyToManyField(to='exam.quizsubtype')),
            ],
        ),
        migrations.CreateModel(
            name='OrderingChunk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct_order', models.JSONField(verbose_name=models.CharField(max_length=200))),
                ('step_index', models.PositiveIntegerField()),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='exam.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='MatchingChunk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_index', models.PositiveIntegerField()),
                ('left_items', models.JSONField()),
                ('right_items', models.JSONField()),
                ('correct_matches', models.JSONField()),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matching_chunks', to='exam.quiz')),
            ],
        ),
        migrations.AddField(
            model_name='baseparticipation',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='exam.quiz'),
        ),
        migrations.AddField(
            model_name='questiontemplate',
            name='subtype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='exam.quizsubtype'),
        ),
        migrations.CreateModel(
            name='TypingParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_steps', models.PositiveIntegerField(default=0)),
                ('current_step', models.PositiveIntegerField(default=1)),
                ('not_answered_count', models.PositiveIntegerField(default=0)),
                ('participation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='typing_participation', to='exam.baseparticipation')),
            ],
        ),
        migrations.CreateModel(
            name='TypingQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('answer', models.JSONField()),
                ('step_index', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('participation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='exam.typingparticipation')),
                ('quiz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='typing_questions', to='exam.quiz')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='typing_questions', to='exam.questiontemplate')),
            ],
        ),
        migrations.CreateModel(
            name='TypingSubmittedAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_answers', to='exam.typingquestion')),
            ],
        ),
        migrations.CreateModel(
            name='MatchingParticipationChunkProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matched_pairs', models.JSONField()),
                ('chunk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.matchingchunk')),
                ('participation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunk_progress', to='exam.matchingparticipation')),
            ],
            options={
                'unique_together': {('participation', 'chunk')},
            },
        ),
    ]
